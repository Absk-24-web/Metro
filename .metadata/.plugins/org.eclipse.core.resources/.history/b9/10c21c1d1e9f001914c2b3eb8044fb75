import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;

import org.eclipse.swt.graphics.Point;

public class MainWindow 
{

	protected Shell shell;
	private Text txtResponse;
	
	private String strOSType;
	
	private BNRCD objBNR;
	private CRDResponse objCRD;
	
	/*private CommPortIdentifier portIdentifier = null;
	private CommPort commPort = null;
	private SerialPort serialPort = null;
	private ParallelPort parallelPort = null;*/

	/**
	 * Launch the application.
	 * @param args
	 */
	public static void main(String[] args)
	{
		try 
		{
			MainWindow window = new MainWindow();
			window.open();
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
		}
	}	
	
	/**
	 * Open the window.
	 */
	public void open()
	{
		Display display = Display.getDefault();
		createContents();
		shell.open();
		shell.layout();
		while (!shell.isDisposed())
		{
			if (!display.readAndDispatch())
			{
				display.sleep();
			}
		}
	}
	
	public static byte GetBCC(byte []p,int n)
	{
		byte  ch;
		int	i; 
		byte crc = (byte)0x00;
	
		for(i=0;i<n;i++)
		{
			ch = p[i];				
			crc = (byte)(ch ^ crc);
		}		
		return crc;
	}
	
	public static String GetErrorDesc(byte byE1, byte byE0)
	{
		String strRes="";
		
		switch(String.format("%02x%02x", byE1, byE0))
		{
			case "0000": strRes = "Reception of undefined command";	break;
			case "0001": strRes = "Command parameter error";	break;
		}
		
		return strRes;
	}

	/**
	 * Create contents of the window.
	 */
	protected void createContents() 
	{
		shell = new Shell();
		shell.setSize(new Point(1033, 525));
		shell.setSize(550, 450);
		shell.setText("SWT Application");
		
		strOSType = System.getProperty("os.name").toLowerCase();
		
		txtResponse = new Text(shell, SWT.BORDER | SWT.V_SCROLL | SWT.MULTI);
		//txtResponse.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		txtResponse.setBounds(10, 233, 507, 143);
		
		Label lblResponse = new Label(shell, SWT.NONE);
		lblResponse.setText("Response");
		//lblResponse.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		lblResponse.setBounds(10, 202, 72, 25);
	/*	if(strOSType.indexOf("win") >= 0)
			cmbCOMPort.setItems(new String[] {"Select", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"});
		else
			cmbCOMPort.setItems(new String[] {"Select", "/dev/ttyS0", "/dev/ttyS1", "/dev/ttyS2", "/dev/ttyS3", "/dev/ttyS4", "/dev/ttyS5", "/dev/ttyS6", "/dev/ttyS7", "/dev/ttyS8", "/dev/ttyS9"});*/
		
		Label lblStatusVal = new Label(shell, SWT.NONE);
		lblStatusVal.setText("");
		//lblStatusVal.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		lblStatusVal.setBounds(10, 487, 576, 28);
		
		Button btnClear = new Button(shell, SWT.NONE);		
		btnClear.setText("Clear");
		//btnClear.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		btnClear.setBounds(430, 194, 87, 30);
		
		Button btnReset = new Button(shell, SWT.NONE);
		btnReset.addSelectionListener(new SelectionAdapter()
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{   
				System.exit(0);					
			}
		});
		btnReset.setText("EXIT\r\n");
		//btnReset.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		btnReset.setBounds(281, 114, 159, 46);
		//formToolkit.adapt(btnLivePacket, true, true);
		
		Button btnInitializeDevice = new Button(shell, SWT.NONE);
		btnInitializeDevice.addSelectionListener(new SelectionAdapter() 
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{   

				try 
				{
						txtResponse.setText("");
						if(objCRD == null)
							objCRD = new CRDResponse();
						
						objCRD=objBNR.Initialize();
						
						if(objCRD.bResponse)
						{
							txtResponse.append("Device INIT Successfully\r\n");
						}
						else
						{
							txtResponse.append("Device INIT Failed\r\n");
						}

				} 
				catch (NumberFormatException e1)
				{
					e1.printStackTrace();
				} 

			}
		});
		btnInitializeDevice.setText("INIT Device");
		//btnInitializeDevice.setForeground(SWTResourceManager.getColor(SWT.COLOR_BLACK));
		//btnInitializeDevice.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		btnInitializeDevice.setBounds(101, 10, 159, 46);
		
		Button btnAskversion = new Button(shell, SWT.NONE);
		btnAskversion.addSelectionListener(new SelectionAdapter()
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{   
				
									
					if(objCRD == null)
						objCRD = new CRDResponse();
	
				     objBNR.cashInRollback(); 
					
			}
		});
		btnAskversion.setText("RETURN");
		//btnAskversion.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		btnAskversion.setBounds(101, 114, 159, 46);
		
		Button btnD = new Button(shell, SWT.NONE);
		btnD.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) 
			{
				if(objCRD == null)
					objCRD = new CRDResponse();
				
				//txtResponse.setText("");
				
				objBNR.endCashInTransaction();
			}
		});
		btnD.setText("DEPOSIT");
		btnD.setBounds(281, 62, 159, 46);
		
		Button btnReset_1 = new Button(shell, SWT.NONE);
		btnReset_1.addSelectionListener(new SelectionAdapter()
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{
				if(objBNR.Reset())
				{
					txtResponse.append("Device reset successfully\r\n");
				}
				else
				{
					txtResponse.append("Device reset failed");
				}
			}
		});
		btnReset_1.setText("RESET");
		btnReset_1.setBounds(281, 10, 159, 46);
		
		Button btnCashIn = new Button(shell, SWT.NONE);
		btnCashIn.addSelectionListener(new SelectionAdapter()
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{
				long acceptedAmount = objBNR.acceptAmount();
				txtResponse.append("Note accepted- " + acceptedAmount/100+"\r\n");
			}
		});
		btnCashIn.setText("CASH IN");
		btnCashIn.setBounds(101, 62, 159, 46);
		shell.setTabList(new Control[]{btnClear, txtResponse});
		
		// Clear button functioning
		btnClear.addSelectionListener(new SelectionAdapter() 
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{
				try
				{
					txtResponse.setText("");
				}
				catch(Exception e1)
				{
					e1.printStackTrace();
				}
			}
		});
	}

	
}

